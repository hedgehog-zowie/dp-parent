<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="IuniWmsStockSourceForWl">

    <sql id="iuniWmsStockForWl_select_all_order">
        SELECT #beginDate# || '~' || #endDate# "DATETIME",
        WAREHOUSE_NAME,
        SOURCE_NAME,
        BIZ_TYPE,
        SKU_CODE,
        CAT_NAME,
        SKU_NAME,
        MATERIAL_CODE,
        MEASURE_UNIT,
        SUM(QUANTITY) QUANTITY
    </sql>

    <sql id="iuniWmsStockForWl_select_all_transfer">
        SELECT #beginDate# || '~' || #endDate# "DATETIME",
        WAREHOUSE_NAME,
        SOURCE_NAME,
        CASE WHEN BILL_TYPE IS NOT NULL THEN BIZ_TYPE || '-' || BILL_TYPE ELSE BIZ_TYPE END "BIZ_TYPE",
        SKU_CODE,
        CAT_NAME,
        SKU_NAME,
        MATERIAL_CODE,
        MEASURE_UNIT,
        SUM(QUANTITY) QUANTITY
    </sql>

    <sql id="iuniWmsStockForWl_select_order">
        SELECT TO_CHAR(DATETIME, 'YYYY-MM-DD') "DATETIME",
        WAREHOUSE_NAME,
        SOURCE_NAME,
        BIZ_TYPE,
        SKU_CODE,
        CAT_NAME,
        SKU_NAME,
        MATERIAL_CODE,
        MEASURE_UNIT,
        SUM(QUANTITY) QUANTITY
    </sql>

    <sql id="iuniWmsStockForWl_select_transfer">
        SELECT TO_CHAR(DATETIME, 'YYYY-MM-DD') "DATETIME",
        WAREHOUSE_NAME,
        SOURCE_NAME,
        CASE WHEN BILL_TYPE IS NOT NULL THEN BIZ_TYPE || '-' || BILL_TYPE ELSE BIZ_TYPE END "BIZ_TYPE",
        SKU_CODE,
        CAT_NAME,
        SKU_NAME,
        MATERIAL_CODE,
        MEASURE_UNIT,
        SUM(QUANTITY) QUANTITY
    </sql>

    <!-- 仓库出入库来源汇总报表 -->
    <sql id="iuniWmsStockSourceForWl_query_order">
        SELECT * FROM (
        SELECT IBT.WMS_BIZ_NAME "BIZ_TYPE",
        IWSC.CREATE_TIME "DATETIME",
        CASE
        WHEN IWSO.ORDER_CODE IS NOT NULL THEN
        IWSO.ORDER_CODE
        WHEN IWT. ID IS NOT NULL THEN
        IWT. ID
        WHEN IWR.RECEIVE_CODE IS NOT NULL THEN
        IWR.RECEIVE_CODE
        ELSE
        ''
        END "ORDER_CODE",
        CASE
        WHEN IWSO.ORDER_CODE IS NOT NULL THEN
        IWSO.ORDER_SOURCE
        WHEN IWLO.COMPANY_NAME IS NOT NULL THEN
        IWLO.COMPANY_NAME
        WHEN IWR.TRANSFER_PARTNER_ID IS NOT NULL THEN
        IWR.TRANSFER_PARTNER_ID
        ELSE
        ''
        END "SOURCE_CODE",
        CASE
        WHEN IWSO.ORDER_CODE IS NOT NULL THEN
        IOS.WMS_SOURCE_NAME
        WHEN IWLO.COMPANY_NAME IS NOT NULL THEN
        IWLO.COMPANY_NAME
        WHEN IWR.TRANSFER_PARTNER_NAME IS NOT NULL THEN
        IWR.TRANSFER_PARTNER_NAME
        ELSE
        ''
        END "SOURCE_NAME",
        IWWH.ID "WAREHOUSE_ID",
        IWWH.WAREHOUSE_NAME,
        IWS.SKU_CODE,
        IWWC.CAT_NAME,
        IWS.SKU_NAME,
        IWS.MATERIAL_CODE,
        IWW.MEASURE_UNIT,
        SUM(IWSC.QUANTITY) QUANTITY
        FROM SYN_WMS_STOCK_CHANGE IWSC
        LEFT JOIN SYN_WMS_STOCK IWSS ON IWSC.STOCK_ID = IWSS. ID
        LEFT JOIN SYN_WMS_WAREHOUSE IWWH ON IWSS.WAREHOUSE_ID = IWWH. ID
        LEFT JOIN SYN_WMS_SALES_ORDER IWSO ON IWSC.ORIGINAL_CODE = IWSO.ORDER_CODE
        LEFT JOIN SYN_WMS_TRANSFER IWT ON IWT. ID = IWSC.ORIGINAL_CODE
        LEFT JOIN SYN_WMS_RECEIVE IWR ON IWSC.ORIGINAL_BIZ_CODE = IWR.RECEIVE_CODE
        LEFT JOIN SYN_WMS_LARGE_ORDER IWLO ON IWLO.ORDER_CODE = IWT.ORDER_CODE
        LEFT JOIN SYN_WMS_SKU IWS ON IWSS.SKU_ID = IWS. ID
        LEFT JOIN SYN_WMS_WARES IWW ON IWS.WARES_ID = IWW. ID
        LEFT JOIN SYN_WMS_WARES_CATEGORY IWWC ON IWW.CAT_ID = IWWC. ID
        LEFT JOIN IUNI_BIZ_TYPE IBT ON IBT.WMS_BIZ_CODE = IWSC.BIZ_TYPE
        LEFT JOIN (
        SELECT DISTINCT
        (WMS_SOURCE_CODE),
        WMS_SOURCE_NAME
        FROM
        IUNI_ORDER_SOURCE
        ) IOS ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        WHERE IWSC.STOCK_TYPE = '4'
        AND IWSC.CREATE_TIME <![CDATA[ >= ]]> TO_DATE(#beginDate#, 'YYYY-MM-DD')
        AND IWSC.CREATE_TIME <![CDATA[ < ]]> TO_DATE(#endDate#, 'YYYY-MM-DD') + 1
        <isNotNull property="warehouseCode" prepend="and">
            IWWH.WAREHOUSE_CODE = #warehouseCode#
        </isNotNull>
        GROUP BY IBT.WMS_BIZ_NAME,
        IWSC.CREATE_TIME,
        IWSO.ORDER_CODE,
        IWT. ID,
        IWR.RECEIVE_CODE,
        IWSO.ORDER_SOURCE,
        IWLO.COMPANY_NAME,
        IWR.TRANSFER_PARTNER_ID,
        IOS.WMS_SOURCE_NAME,
        IWR.TRANSFER_PARTNER_NAME,
        IWWH. ID,
        IWWH.WAREHOUSE_NAME,
        IWS.SKU_CODE,
        IWWC.CAT_NAME,
        IWS.SKU_NAME,
        IWS.MATERIAL_CODE,
        IWW.MEASURE_UNIT,
        IWSO.INVOICE_CODE,
        IWSO.INVOICE_TCODE,
        IWSO.INVOICE_AMOUNT
        UNION ALL
        SELECT '遗失' "BIZ_TYPE",
        IWSO.HANDLED_TIME "DATETIME",
        IWSO.ORDER_CODE,
        IWSO.ORDER_SOURCE "SOURCE_CODE",
        IOS.WMS_SOURCE_NAME "SOURCE_NAME",
        IWWH.ID "WAREHOUSE_ID",
        IWWH.WAREHOUSE_NAME,
        IWS.SKU_CODE,
        IWWC.CAT_NAME,
        IWS.SKU_NAME,
        IWS.MATERIAL_CODE,
        IWW.MEASURE_UNIT,
        IWSOG.QUANTITY
        FROM SYN_WMS_SALES_ORDER IWSO
        LEFT JOIN SYN_WMS_SALES_ORDER_GOODS IWSOG
        ON IWSOG.ORDER_ID = IWSO.ID
        LEFT JOIN SYN_WMS_SKU IWS
        ON IWSOG.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_STOCK IWSS
        ON IWSS.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_WAREHOUSE IWWH
        ON IWSS.WAREHOUSE_ID = IWWH.ID
        LEFT JOIN SYN_WMS_WARES IWW
        ON IWS.WARES_ID = IWW.ID
        LEFT JOIN SYN_WMS_WARES_CATEGORY IWWC
        ON IWW.CAT_ID = IWWC.ID
        LEFT JOIN (SELECT DISTINCT (WMS_SOURCE_CODE), WMS_SOURCE_NAME
        FROM IUNI_ORDER_SOURCE) IOS
        ON IOS.WMS_SOURCE_CODE = IWSO.ORDER_SOURCE
        WHERE 1 = 1
        AND IWSO.ORDER_STATUS = '12'
        AND (IWSO.ORDER_MERGER_TYPE IS NULL OR IWSO.ORDER_MERGER_TYPE = 2)
        AND IWSO.HANDLED_TIME <![CDATA[ >= ]]> TO_DATE(#beginDate#, 'YYYY-MM-DD')
        AND IWSO.HANDLED_TIME <![CDATA[ < ]]> TO_DATE(#endDate#, 'YYYY-MM-DD')
        <isNotNull property="warehouseCode" prepend="and">
            IWWH.WAREHOUSE_CODE = #warehouseCode#
        </isNotNull>
        ) WHERE "QUANTITY" <![CDATA[ <> ]]> 0
    </sql>

    <!-- 仓库出入库来源汇总报表 - 调拔 -->
    <sql id="iuniWmsStockSourceForWl_query_transfer">
        SELECT * FROM (
        SELECT '调拔发货' "BIZ_TYPE",
        CASE IWT.BILL_TYPE
        WHEN '0' THEN
        '大客户销售'
        WHEN '1' THEN
        '对内调拨'
        WHEN '2' THEN
        '大客户下单'
        WHEN '3' THEN
        '调拨换货发货'
        ELSE
        IWT.BILL_TYPE
        END "BILL_TYPE",
        IWT.SHIPPING_TIME "DATETIME",
        IWT.ID "CODE",
        IWTP.ID "SOURCE_CODE",
        CASE WHEN IWT.TRANSFER_SALE IS NOT NULL THEN IWTP.NAME
        ELSE IWLO.COMPANY_NAME END "SOURCE_NAME",
        IWWH.ID "WAREHOUSE_ID",
        IWWH.WAREHOUSE_NAME,
        IWS.SKU_CODE,
        IWWC.CAT_NAME,
        IWS.SKU_NAME,
        IWS.MATERIAL_CODE,
        IWW.MEASURE_UNIT,
        IWTG.QUANTITY QUANTITY
        FROM SYN_WMS_TRANSFER IWT
        LEFT JOIN SYN_WMS_TRANSFER_GOODS IWTG
        ON IWTG.TRANSFER_ID = IWT.ID
        LEFT JOIN SYN_WMS_TRANSFER_PARTNER IWTP
        ON IWTP.ID = IWT.TRANSFER_SALE
        LEFT JOIN SYN_WMS_LARGE_ORDER IWLO
        ON IWLO.ORDER_CODE = IWT.ORDER_CODE
        LEFT JOIN SYN_WMS_SKU IWS
        ON IWTG.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_WARES IWW
        ON IWS.WARES_ID = IWW.ID
        LEFT JOIN SYN_WMS_WARES_CATEGORY IWWC
        ON IWW.CAT_ID = IWWC.ID
        LEFT JOIN SYN_WMS_WAREHOUSE IWWH
        ON IWT.WAREHOUSE_ID = IWWH.ID
        WHERE IWT.STATUS = '2'
        AND IWT.SHIPPING_TIME <![CDATA[ >= ]]> TO_DATE(#beginDate#, 'YYYY-MM-DD')
        AND IWT.SHIPPING_TIME <![CDATA[ < ]]> TO_DATE(#endDate#, 'YYYY-MM-DD') + 1
        <isNotNull property="warehouseCode" prepend="and">
            IWWH.WAREHOUSE_CODE = #warehouseCode#
        </isNotNull>
        UNION ALL
        SELECT CASE IWR.RECEIVE_TYPE
        WHEN '104' THEN
        '调拔退货'
        WHEN '107' THEN
        '调拔换货退回'
        END "BIZ_TYPE",
        '' "BILL_TYPE",
        IWR.HANDLED_TIME "DATETIME",
        IWR.RECEIVE_CODE "CODE",
        IWR.TRANSFER_PARTNER_ID "PARTNER_ID",
        IWR.TRANSFER_PARTNER_NAME "PARTNER_NAME",
        IWWH.ID "WAREHOUSE_ID",
        IWWH.WAREHOUSE_NAME,
        IWS.SKU_CODE,
        IWWC.CAT_NAME,
        IWS.SKU_NAME,
        IWS.MATERIAL_CODE,
        IWW.MEASURE_UNIT,
        IWRG.QUANTITY
        FROM SYN_WMS_RECEIVE IWR
        LEFT JOIN SYN_WMS_TRANSFER_PARTNER IWWP
        ON IWR.TRANSFER_PARTNER_ID = IWWP.ID
        LEFT JOIN SYN_WMS_RECEIVE_GOODS IWRG
        ON IWRG.RECEIVE_ID = IWR.ID
        LEFT JOIN SYN_WMS_SKU IWS
        ON IWRG.SKU_ID = IWS.ID
        LEFT JOIN SYN_WMS_WARES IWW
        ON IWS.WARES_ID = IWW.ID
        LEFT JOIN SYN_WMS_WARES_CATEGORY IWWC
        ON IWW.CAT_ID = IWWC.ID
        LEFT JOIN SYN_WMS_WAREHOUSE IWWH
        ON IWR.WAREHOUSE_ID = IWWH.ID
        WHERE IWR.RECEIVE_TYPE IN ('104', '107')
        AND IWR.HANDLING_STATUS = 1
        AND (IWRG.USE_FLAG IS NULL OR IWRG.USE_FLAG <![CDATA[ <> ]]> '0')
        AND IWR.HANDLED_TIME <![CDATA[ >= ]]> TO_DATE(#beginDate#, 'YYYY-MM-DD')
        AND IWR.HANDLED_TIME <![CDATA[ < ]]> TO_DATE(#endDate#, 'YYYY-MM-DD') + 1
        <isNotNull property="warehouseCode" prepend="and">
            IWWH.WAREHOUSE_CODE = #warehouseCode#
        </isNotNull>
        ) WHERE "QUANTITY" <![CDATA[ <> ]]> 0
    </sql>

    <sql id="iuniWmsStockChannelForWl_groupBy_order">
        GROUP BY TO_CHAR(DATETIME, 'YYYY-MM-DD'),
        WAREHOUSE_NAME,
        SOURCE_NAME,
        BIZ_TYPE,
        SKU_CODE,
        CAT_NAME,
        SKU_NAME,
        MATERIAL_CODE,
        MEASURE_UNIT
    </sql>

    <sql id="iuniWmsStockChannelForWl_groupBy_transfer">
        GROUP BY TO_CHAR(DATETIME, 'YYYY-MM-DD'),
        WAREHOUSE_NAME,
        SOURCE_NAME,
        CASE WHEN BILL_TYPE IS NOT NULL THEN BIZ_TYPE || '-' || BILL_TYPE ELSE BIZ_TYPE END,
        SKU_CODE,
        CAT_NAME,
        SKU_NAME,
        MATERIAL_CODE,
        MEASURE_UNIT
    </sql>

    <sql id="iuniWmsStockChannelForWl_orderBy">
        ORDER BY DATETIME,
        WAREHOUSE_NAME,
        SOURCE_NAME,
        BIZ_TYPE,
        SKU_CODE,
        CAT_NAME,
        SKU_NAME,
        MATERIAL_CODE,
        MEASURE_UNIT
    </sql>

    <sql id="iuniWmsStockChannelForWl_groupBy_all_order">
        GROUP BY
        WAREHOUSE_NAME,
        SOURCE_NAME,
        BIZ_TYPE,
        SKU_CODE,
        CAT_NAME,
        SKU_NAME,
        MATERIAL_CODE,
        MEASURE_UNIT
    </sql>

    <sql id="iuniWmsStockChannelForWl_groupBy_all_transfer">
        GROUP BY
        WAREHOUSE_NAME,
        SOURCE_NAME,
        CASE WHEN BILL_TYPE IS NOT NULL THEN BIZ_TYPE || '-' || BILL_TYPE ELSE BIZ_TYPE END,
        SKU_CODE,
        CAT_NAME,
        SKU_NAME,
        MATERIAL_CODE,
        MEASURE_UNIT
    </sql>

    <sql id="iuniWmsStockChannelForWl_orderBy_all">
        ORDER BY
        WAREHOUSE_NAME,
        SOURCE_NAME,
        BIZ_TYPE,
        SKU_CODE,
        CAT_NAME,
        SKU_NAME,
        MATERIAL_CODE,
        MEASURE_UNIT
    </sql>

    <select id="selectSumWmsStockSourceForWlByPage" resultClass="hashmap" parameterClass="map">
        SELECT * FROM
        (
        SELECT TT.*, ROWNUM "rowNum" FROM
        (
        SELECT * FROM (
        <include refid="iuniWmsStockForWl_select_all_order"/>
        FROM
        (
        <include refid="iuniWmsStockSourceForWl_query_order"/>
        )
        <include refid="iuniWmsStockChannelForWl_groupBy_all_order"/>
        )
        <include refid="iuniWmsStockChannelForWl_orderBy_all"/>
        )TT
        <isNotNull property="endRec">
            WHERE ROWNUM <![CDATA[ <= ]]> #endRec#
        </isNotNull>
        )
        <isNotNull property="startRec">
            WHERE "rowNum" <![CDATA[ >= ]]> #startRec#
        </isNotNull>
    </select>

    <select id="selectSumWmsStockSourceForWlCount" resultClass="int" parameterClass="map">
        select count(*) "totalCount" from
        (
        SELECT * FROM (
        <!--<include refid="iuniWmsStockForWl_select_all_transfer"/>-->
        <!--FROM-->
        <!--(-->
        <!--<include refid="iuniWmsStockSourceForWl_query_transfer"/>-->
        <!--)-->
        <!--<include refid="iuniWmsStockChannelForWl_groupBy_all_transfer"/>-->
        <!--UNION-->
        <include refid="iuniWmsStockForWl_select_all_order"/>
        FROM
        (
        <include refid="iuniWmsStockSourceForWl_query_order"/>
        )
        <include refid="iuniWmsStockChannelForWl_groupBy_all_order"/>
        )
        <include refid="iuniWmsStockChannelForWl_orderBy_all"/>
        )
    </select>

    <select id="selectWmsStockSourceForWlByPage" resultClass="hashmap" parameterClass="map">
        SELECT * FROM
        (
        SELECT TT.*, ROWNUM "rowNum" FROM
        (
        SELECT * FROM (
        <include refid="iuniWmsStockForWl_select_order"/>
        FROM
        (
        <include refid="iuniWmsStockSourceForWl_query_order"/>
        )
        <include refid="iuniWmsStockChannelForWl_groupBy_order"/>
        )
        <include refid="iuniWmsStockChannelForWl_orderBy"/>
        ) TT
        <isNotNull property="endRec">
            WHERE ROWNUM <![CDATA[ <= ]]> #endRec#
        </isNotNull>
        )
        <isNotNull property="startRec">
            WHERE "rowNum" <![CDATA[ >= ]]> #startRec#
        </isNotNull>
    </select>

    <select id="selectWmsStockSourceForWlCount" resultClass="int" parameterClass="map">
        select count(*) "totalCount" from
        (
        SELECT * FROM (
        <!--<include refid="iuniWmsStockForWl_select_transfer"/>-->
        <!--FROM-->
        <!--(-->
        <!--<include refid="iuniWmsStockSourceForWl_query_transfer"/>-->
        <!--)-->
        <!--<include refid="iuniWmsStockChannelForWl_groupBy_transfer"/>-->
        <!--UNION-->
        <include refid="iuniWmsStockForWl_select_order"/>
        FROM
        (
        <include refid="iuniWmsStockSourceForWl_query_order"/>
        )
        <include refid="iuniWmsStockChannelForWl_groupBy_order"/>
        )
        <include refid="iuniWmsStockChannelForWl_orderBy"/>
        )
    </select>

</sqlMap>